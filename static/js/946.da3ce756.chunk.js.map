{"version":3,"file":"static/js/946.da3ce756.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/chat/chat.module.css?354c","webpack://social-network/./src/components/chat/addMesForm.module.css?0b4f","components/chat/AddMessageForm.tsx","webpack://social-network/./src/components/chat/message.module.css?0547","components/chat/Message.tsx","components/chat/messages.module.css","components/chat/Messages.tsx","components/chat/Chat.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"chat_title__qEnWW\",\"wrap\":\"chat_wrap__18RKB\",\"down\":\"chat_down__nYkXp\",\"hidden\":\"chat_hidden__HNK9S\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"addMesForm_form__YafLa\",\"hidden\":\"addMesForm_hidden__jEklI\",\"flex\":\"addMesForm_flex__9hA41\"};","import React from \"react\";\r\nimport { useState, ChangeEvent } from \"react\";\r\nimport Button from \"../common/button/Button\";\r\nimport { sendMessage } from \"../../redux/chatPageReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Action } from \"redux\";\r\nimport classes from './addMesForm.module.css';\r\n\r\nconst AddMessageForm: React.FC = React.memo(() => {\r\n\r\n    let [text, setText] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onTextChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const onClick = () => {\r\n        if (text) {\r\n            dispatch(sendMessage(text) as unknown as Action);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <div className={classes.flex}>\r\n                <input value={text} onChange={onTextChange} placeholder='Enter your message...' />\r\n                <Button onClick={onClick} >Send</Button>\r\n            </div>\r\n            <div className={classes.hidden}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default AddMessageForm;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"message_wrap__cg+hU\",\"name\":\"message_name__teC7y\",\"message\":\"message_message__hWxvG\",\"image\":\"message_image__Bb0iR\",\"flex\":\"message_flex__6Kbi2\"};","import React from \"react\";\r\nimport classes from './message.module.css';\r\nimport { MessageType } from \"../../types/types\";\r\n\r\ntype Props = {\r\n    message: MessageType,\r\n}\r\n\r\nconst Message: React.FC<Props> = React.memo(({ message }) => {\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <div className={classes.name}>\r\n                {message.userName}\r\n            </div>\r\n            <div className={classes.flex}>\r\n                <div>\r\n                    <div className={classes.image}>\r\n                        <img src={message.photo} />\r\n                    </div>\r\n                </div>\r\n                <div className={classes.message}>\r\n                    {message.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport classes from './messages.module.css';\r\nimport { MessageType } from \"../../types/types\";\r\n\r\ntype Props = {\r\n    messages: Array<MessageType>,\r\n}\r\n\r\nconst Messages: React.FC<Props> = React.memo(({messages}) => {\r\n    return(\r\n        <div className={classes.messages} >\r\n            {messages.map((message, index) => <Message message={message} key={index}/>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Messages;","import React, { useEffect, useRef } from 'react';\r\nimport classes from './chat.module.css';\r\nimport AddMessageForm from './AddMessageForm';\r\nimport Messages from './Messages';\r\nimport { startListening } from '../../redux/chatPageReducer';\r\nimport { giveChatMessages } from '../../redux/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { clearListheners } from '../../redux/chatPageReducer';\r\nimport { RefObject, useState } from 'react';\r\nimport down from '../../images/Down.png';\r\n\r\nconst Chat: React.FC = React.memo(() => {\r\n\r\n    let [isVisib, setIsVisib] = useState(false);\r\n    const bottomPoint = useRef() as RefObject<HTMLDivElement>;\r\n    const messages = useSelector(giveChatMessages);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startListening() as unknown as Action);\r\n\r\n        return () => {\r\n            dispatch(clearListheners() as unknown as Action);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        bottomPoint.current?.scrollIntoView(false);\r\n    }, [messages])\r\n\r\n    const onScroll = (e: React.UIEvent) => {\r\n        if (e.currentTarget.scrollHeight - e.currentTarget.scrollTop > 1000 && !isVisib) {\r\n            setIsVisib(true);\r\n        }\r\n        if (e.currentTarget.scrollHeight - e.currentTarget.scrollTop < 820 && isVisib) {\r\n            setIsVisib(false);\r\n        }\r\n    }\r\n\r\n    const onClick = () => {\r\n        bottomPoint.current?.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"start\" });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrap} onScroll={onScroll}>\r\n            <img src={down} className={isVisib ? classes.down : classes.hidden}\r\n                onClick={onClick} />\r\n            <div className={classes.title}>\r\n                Chat messages\r\n            </div>\r\n            <Messages messages={messages} />\r\n            <AddMessageForm />\r\n            <div ref={bottomPoint}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["React","_useState","useState","_useState2","_slicedToArray","text","setText","dispatch","useDispatch","_jsxs","className","classes","children","_jsx","value","onChange","e","target","placeholder","Button","onClick","sendMessage","_ref","message","userName","src","photo","messages","map","index","Message","isVisib","setIsVisib","bottomPoint","useRef","useSelector","giveChatMessages","useEffect","startListening","clearListheners","_bottomPoint$current","current","scrollIntoView","onScroll","currentTarget","scrollHeight","scrollTop","down","_bottomPoint$current2","behavior","block","inline","Messages","AddMessageForm","ref"],"sourceRoot":""}